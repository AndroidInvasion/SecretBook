buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
        mavenCentral()
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.25.2'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'de.felixschulze.gradle.hockeyapp'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "ru.androidinvasion.secretbook"
        minSdkVersion 19
        targetSdkVersion 26
        versionCode System.getenv('TRAVIS_BUILD_NUMBER') as Integer ?: 1
        versionName "1.0." + versionCode
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        release {
            def keystorePropertiesFile = rootProject.file("deploy/unsecret/secret.properties")
            def keystoreProperties = new Properties()
            keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

            // this keystore is located at module level
            storeFile file("../deploy/unsecret/deploy.jks")
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.release
        }
    }
}


ext {
    betaDistributionEmails = "nikita@kulikof.ru"

    daggerVersion = '2.14.1'
    moxyVersion = '1.5.3'
    rxjavaVersion = '2.0.2'
    supportVersion = '26.1.0'
    crashalyticsVersion = '2.9.1'
    constrainLayoutVersion = '1.0.2'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation "com.android.support:appcompat-v7:$supportVersion"
    implementation "com.android.support:design:$supportVersion"
    implementation "com.android.support.constraint:constraint-layout:$constrainLayoutVersion"
    implementation "com.android.support:support-vector-drawable:$supportVersion"

    implementation "com.arello-mobile:moxy:$moxyVersion"
    implementation "com.arello-mobile:moxy-app-compat:$moxyVersion"
    kapt "com.arello-mobile:moxy-compiler:$moxyVersion"

    implementation "io.reactivex.rxjava2:rxandroid:$rxjavaVersion"

    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"

    implementation("com.crashlytics.sdk.android:crashlytics:$crashalyticsVersion@aar") {
        transitive = true
    }
}

hockeyapp {
    def keystorePropertiesFile = rootProject.file("deploy/unsecret/secret.properties")
    def keystoreProperties = new Properties()
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

    apiToken = keystoreProperties['apiTokenHockey']
    notesType = 1
    notes = System.getenv('TRAVIS_COMMIT_MESSAGE') ?: new File(file('../README.md').absolutePath).getText('UTF-8')
}

android {
    lintOptions {
        abortOnError true
        warningsAsErrors false
        quiet false
        htmlReport true
        xmlReport false
        textReport true
        explainIssues true
        ignoreWarnings false
        lintConfig file("lint.xml")
    }
}